<%- include('../includes/adminHeader') %>

  <div class="iq-navbar-header" style="height: 215px;">
    <div class="container-fluid iq-container">
      <div class="row">
        <div class="col-md-12">
          <div class="flex-wrap d-flex justify-content-between align-items-center">
            <div>
              <h1>Find what is best for you!</h1>
              <p>We are on a mission to help developers like you build successful projects for FREE.</p>
            </div>
            <!-- <div>
              <a href="" class="btn btn-link btn-soft-light">
                <svg class="icon-20" width="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M11.8251 15.2171H12.1748C14.0987 15.2171 15.731 13.985 16.3054 12.2764C16.3887 12.0276 16.1979 11.7713 15.9334 11.7713H14.8562C14.5133 11.7713 14.2362 11.4977 14.2362 11.16C14.2362 10.8213 14.5133 10.5467 14.8562 10.5467H15.9005C16.2463 10.5467 16.5263 10.2703 16.5263 9.92875C16.5263 9.58722 16.2463 9.31075 15.9005 9.31075H14.8562C14.5133 9.31075 14.2362 9.03619 14.2362 8.69849C14.2362 8.35984 14.5133 8.08528 14.8562 8.08528H15.9005C16.2463 8.08528 16.5263 7.8088 16.5263 7.46728C16.5263 7.12575 16.2463 6.84928 15.9005 6.84928H14.8562C14.5133 6.84928 14.2362 6.57472 14.2362 6.23606C14.2362 5.89837 14.5133 5.62381 14.8562 5.62381H15.9886C16.2483 5.62381 16.4343 5.3789 16.3645 5.13113C15.8501 3.32401 14.1694 2 12.1748 2H11.8251C9.42172 2 7.47363 3.92287 7.47363 6.29729V10.9198C7.47363 13.2933 9.42172 15.2171 11.8251 15.2171Z"
                    fill="currentColor"></path>
                  <path opacity="0.4"
                    d="M19.5313 9.82568C18.9966 9.82568 18.5626 10.2533 18.5626 10.7823C18.5626 14.3554 15.6186 17.2627 12.0005 17.2627C8.38136 17.2627 5.43743 14.3554 5.43743 10.7823C5.43743 10.2533 5.00345 9.82568 4.46872 9.82568C3.93398 9.82568 3.5 10.2533 3.5 10.7823C3.5 15.0873 6.79945 18.6413 11.0318 19.1186V21.0434C11.0318 21.5715 11.4648 22.0001 12.0005 22.0001C12.5352 22.0001 12.9692 21.5715 12.9692 21.0434V19.1186C17.2006 18.6413 20.5 15.0873 20.5 10.7823C20.5 10.2533 20.066 9.82568 19.5313 9.82568Z"
                    fill="currentColor"></path>
                </svg>
              </a>
            </div> -->
          </div>
        </div>
      </div>
    </div>
    <div class="iq-header-img">
      <img src="../../assets/images/dashboard/top-header.png" alt="header"
        class="theme-color-default-img img-fluid w-100 h-100 animated-scaleX">
      <img src="../../assets/images/dashboard/top-header1.png" alt="header"
        class="theme-color-purple-img img-fluid w-100 h-100 animated-scaleX">
      <img src="../../assets/images/dashboard/top-header2.png" alt="header"
        class="theme-color-blue-img img-fluid w-100 h-100 animated-scaleX">
      <img src="../../assets/images/dashboard/top-header3.png" alt="header"
        class="theme-color-green-img img-fluid w-100 h-100 animated-scaleX">
      <img src="../../assets/images/dashboard/top-header4.png" alt="header"
        class="theme-color-yellow-img img-fluid w-100 h-100 animated-scaleX">
      <img src="../../assets/images/dashboard/top-header5.png" alt="header"
        class="theme-color-pink-img img-fluid w-100 h-100 animated-scaleX">
    </div>
  </div> <!-- Nav Header Component End -->
  <!--Nav End-->
  </div>
  <div class="container-fluid content-inner mt-n5 py-0">
    <div>
      <div class="row">
        <div class="col-xl-3 col-lg-4">
          <div class="card" style="box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
            <div class="card-header text-center">
              <h4 class="card-title fw-bold">Filters</h4>
            </div>
            <div class="card-body p-4">
              <form id="filterForm" class="text-black">
                <!-- Role Filter -->
                <div class="form-group mb-4">
                  <label class="form-label fw-semibold">Internship Role:</label>
                  <select name="role" class="form-select" id="roleFilter">
                    <option value="">All Roles</option>
                    <option>Web Designer</option>
                    <option>Web Developer</option>
                    <option>Tester</option>
                    <option>PHP Developer</option>
                    <option>iOS Developer</option>
                    <option>Android Developer</option>
                    <option>Marketing Intern</option>
                  </select>
                </div>

                <!-- Location Filter -->
                <div class="form-group mb-4">
                  <label class="form-label fw-semibold">Location:</label>
                  <select name="location" class="form-select" id="locationFilter">
                    <option value="">All Locations</option>
                    <option>Mumbai</option>
                    <option>Bangalore</option>
                    <option>Delhi</option>
                    <option>Pune</option>
                    <option>Chennai</option>
                    <option>Hyderabad</option>
                    <option>Kolkata</option>
                    <option>Remote</option>
                    <option>Work from Home</option>
                    <option>Hybrid</option>
                  </select>
                </div>

                <!-- Salary Range Slider -->
                <div class="form-group mb-4">
                  <label class="form-label fw-semibold">Desired minimum monthly stipend (₹):</label>
                  <input type="range" class="form-range" id="salaryRange" min="0" max="10000" step="2000" value="0"
                    onchange="updateSalaryDisplay(this.value)">

                  <div class="d-flex justify-content-between mt-2 text-muted">
                    <small>₹0</small>
                    <small>₹2K</small>
                    <small>₹4K</small>
                    <small>₹6K</small>
                    <small>₹8K</small>
                    <small>₹10K</small>
                  </div>

                  <input type="text" id="salaryDisplay" class="form-control mt-2 text-center" value="₹0" readonly>
                </div>

                <!-- Job Type Filter -->
                <div class="form-group mb-4">
                  <label class="form-label fw-semibold">Job Type:</label>
                  <select name="jobType" class="form-select" id="jobTypeFilter">
                    <option value="">All Types</option>
                    <option>Full-time</option>
                    <option>Part-time</option>
                    <option>Internship</option>
                    <option>Contract</option>
                  </select>
                </div>

                <!-- Buttons -->
                <div class="d-flex justify-content-between">
                  <button type="button" class="btn btn-primary" onclick="clearFilters()">Clear all</button>
                  <button type="button" class="btn btn-primary" onclick="applyFilters()">Apply Filters</button>
                </div>
              </form>
            </div>
          </div>
        </div>
        <div class="col-xl-9 col-lg-8">
          <!-- <div class="card"> -->
          <!-- <div class="card-header d-flex justify-content-between">
         <div class="header-title">
            <h4 class="card-title"></h4>
         </div>
      </div> -->


          <!-- <div class="col-lg-4"> -->
          <!-- <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between">
                    <div class="d-flex align-items-center">
                        <div class="p-2 rounded bg-warning disabled">
                            <svg class="icon-24" xmlns="http://www.w3.org/2000/svg" width="24" fill="none" viewBox="0 0 24 24" stroke="white">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                            </svg> 
                        </div>
                        <h4 class="px-3">Conversion</h4>
                    </div> 
                    <div class="d-flex align-items-center">
                        <a href="#" class=" border rounded">
                            <svg class="icon-28" width="28" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M15.9393 12.0129H15.9483" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                                <path d="M11.9301 12.0129H11.9391" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                                <path d="M7.92128 12.0129H7.93028" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                            </svg>
                        </a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <form class="d-grid gap-card">
                    <div class="form-group mb-2">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="1000" aria-label="Recipient's username" aria-describedby="basic-addon3">
                            <span class="input-group-text" id="basic-addon3">GRD</span>
                        </div>
                    </div>
                    <div class="form-group mb-2">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="100" aria-label="Recipient's username" aria-describedby="basic-addon4">
                            <span class="input-group-text" id="basic-addon4">USD</span>
                        </div>
                    </div>
                    <div class="form-group mb-3">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="150" aria-label="Recipient's username" aria-describedby="basic-addon4">
                            <span class="input-group-text" id="basic-addon4">Euro</span>
                        </div>
                    </div>
                    <button class="btn btn-primary">Archive</button>
                </form>
            </div>
        </div> -->
          <!-- </div> -->

          <% internships.forEach((internship)=>{ %>
            <div class="internship-card mb-4" 
                 data-role="<%= internship.jobTitle %>"
                 data-location="<%= internship.jobLocation %>"
                 data-salary="<%= internship.stipend %>"
                 data-jobtype="<%= internship.jobType %>"
                 data-company="<%= internship.companyName %>">
              <a href="/admin-view-internship/<%= internship._id %>">
                <div class="card shadow-sm">
                  <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                      <!-- Job Title and Company -->
                      <div>
                        <h5 class="card-title mb-1">
                          <%= internship.jobTitle %>
                        </h5>
                        <p class="text-muted mb-1">
                          <%= internship.companyName %> <span class="text-success">Recommended</span>
                        </p>
                      </div>
                      <!-- Company Logo -->
                      <div>
                        <img width="70px" height="70px" src="<%= internship.companyLogo %>">
                      </div>
                    </div>
                    <!-- Job Details -->
                    <div class="d-flex justify-content-between align-items-center mt-2">
                      <div class="text-muted">
                        <i class="bi bi-geo-alt-fill"></i>
                        <%= internship.jobLocation %>
                      </div>
                      <div class="text-muted">
                        <i class="bi bi-currency-rupee"></i> ₹<%= internship.stipend %> per month
                      </div>
                    </div>
                    <!-- Post Date and Type -->
                    <div class="d-flex justify-content-between align-items-center mt-3">
                      <div class="text-muted">Posted: <%= internship.postedDate %></div>
                      <div class="badge bg-success">
                        <%= internship.jobType %>
                      </div>
                    </div>
                  </div>
                </div>
              </a>
            </div>
            <% }) %>
        </div>
      </div>
      <!-- </div> -->
    </div>
  </div>
  </div>
<%- include('../includes/studentFooter') %>

<script>
  // Wait for the DOM to be fully loaded
  document.addEventListener('DOMContentLoaded', function() {
    // Debug the internship data
    console.log("Internship cards:", document.querySelectorAll('.internship-card').length);
    
    // Fix for missing closing div
    document.querySelectorAll('.internship-card').forEach(card => {
      // Debug each card
      console.log("Card data:", {
        role: card.dataset.role || 'missing',
        location: card.dataset.location || 'missing',
        salary: card.dataset.salary || 'missing',
        jobType: card.dataset.jobtype || 'missing',
        company: card.dataset.company || 'missing'
      });
    });
    
    // Update salary display
    function updateSalaryDisplay(value) {
      document.getElementById('salaryDisplay').value = `₹${parseInt(value).toLocaleString()}`;
    }

    // Clear all filters - using normal function instead of window property
    function clearFilters() {
      document.getElementById('roleFilter').value = '';
      document.getElementById('locationFilter').value = '';
      document.getElementById('salaryRange').value = '0';
      document.getElementById('salaryDisplay').value = '₹0';
      document.getElementById('jobTypeFilter').value = '';
      applyFilters();
    }
    // Expose to global scope for onclick
    window.clearFilters = clearFilters;

    // Apply filters
    function applyFilters() {
      console.log("Applying filters...");
      const roleFilter = document.getElementById('roleFilter').value.toLowerCase();
      const locationFilter = document.getElementById('locationFilter').value.toLowerCase();
      const salaryFilter = parseInt(document.getElementById('salaryRange').value);
      const jobTypeFilter = document.getElementById('jobTypeFilter').value.toLowerCase();

      console.log("Filter values:", { roleFilter, locationFilter, salaryFilter, jobTypeFilter });

      const internshipCards = document.querySelectorAll('.internship-card');
      console.log(`Found ${internshipCards.length} internship cards`);
      
      let visibleCount = 0;
      
      internshipCards.forEach((card, index) => {
        try {
          // Get card data, handle undefined/null values
          const role = (card.dataset.role || '').toLowerCase();
          const location = (card.dataset.location || '').toLowerCase();
          const salary = parseInt(card.dataset.salary) || 0;
          const jobType = (card.dataset.jobtype || '').toLowerCase();
          const company = (card.dataset.company || '').toLowerCase();
          
          console.log(`Card ${index + 1}:`, { role, location, salary, jobType, company });

          // Role filter - check if job title or company contains the filter term
          const roleMatch = !roleFilter || 
                          role.includes(roleFilter) || 
                          company.includes(roleFilter);
          
          // Location filter
          let locationMatch = false;
          if (!locationFilter) {
            locationMatch = true;
          } else if (location) {
            // More flexible comparison for location
            locationMatch = location.includes(locationFilter.toLowerCase());
            
            // Special handling for remote/WFH
            if (locationFilter === 'remote' || locationFilter === 'work from home') {
              locationMatch = location.includes('remote') || 
                             location.includes('wfh') || 
                             location.includes('work from home');
            }
            // Special handling for hybrid
            else if (locationFilter === 'hybrid') {
              locationMatch = location.includes('hybrid');
            }
          }
          
          // Salary filter
          const salaryMatch = !salaryFilter || salary >= salaryFilter;
          
          // Job Type filter
          let jobTypeMatch = false;
          if (!jobTypeFilter) {
            jobTypeMatch = true;
          } else {
            // Direct match
            jobTypeMatch = jobType.includes(jobTypeFilter);
            
            // Handle common variations
            if (jobTypeFilter === 'full-time' || jobTypeFilter === 'full time' || jobTypeFilter === 'fulltime') {
              jobTypeMatch = jobType.includes('full') || jobType.includes('fulltime');
            }
            else if (jobTypeFilter === 'part-time' || jobTypeFilter === 'part time' || jobTypeFilter === 'parttime') {
              jobTypeMatch = jobType.includes('part') || jobType.includes('parttime');
            }
          }

          console.log(`Card ${index + 1} matches:`, { 
            roleMatch, locationMatch, salaryMatch, jobTypeMatch,
            visible: (roleMatch && locationMatch && salaryMatch && jobTypeMatch)
          });

          // Show card only if all filters match
          if (roleMatch && locationMatch && salaryMatch && jobTypeMatch) {
            card.style.display = 'block';
            visibleCount++;
          } else {
            card.style.display = 'none';
          }
        } catch (error) {
          console.error(`Error processing card ${index + 1}:`, error);
          // Show the card if there's an error
          card.style.display = 'block';
          visibleCount++;
        }
      });

      // Show message if no results
      updateNoResultsMessage(visibleCount);
      
      console.log(`Filter results: ${visibleCount} internships visible`);
    }
    // Expose to global scope for onclick
    window.applyFilters = applyFilters;
    
    // Helper function to show/hide no results message
    function updateNoResultsMessage(visibleCount) {
      const resultsContainer = document.querySelector('.col-xl-9');
      let noResultsMessage = document.getElementById('noResultsMessage');
      
      if (visibleCount === 0) {
        if (!noResultsMessage) {
          noResultsMessage = document.createElement('div');
          noResultsMessage.id = 'noResultsMessage';
          noResultsMessage.className = 'alert alert-info text-center mt-4';
          noResultsMessage.innerHTML = `
            <p>No internships found matching your criteria.</p>
            <p>Try adjusting your filters or <a href="#" onclick="clearFilters(); return false;">clear all filters</a>.</p>
          `;
          resultsContainer.appendChild(noResultsMessage);
        }
      } else if (noResultsMessage) {
        noResultsMessage.remove();
      }
    }

    // Add event listeners for filter changes
    document.getElementById('roleFilter').addEventListener('change', applyFilters);
    document.getElementById('locationFilter').addEventListener('change', applyFilters);
    document.getElementById('salaryRange').addEventListener('input', function() {
      updateSalaryDisplay(this.value);
      applyFilters();
    });
    document.getElementById('jobTypeFilter').addEventListener('change', applyFilters);

    // Initialize filters on page load
    console.log("Initializing filters...");
    updateSalaryDisplay(document.getElementById('salaryRange').value);
    applyFilters();
  });
</script>